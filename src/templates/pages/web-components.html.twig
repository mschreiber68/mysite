{% extends 'base-layout.html.twig' %}

{% block inlineCss %}
    {% include 'css/web-components.css' %}
{% endblock %}

{% block js %}
    <script type="module" src="/js/pages/web-components.js"></script>
{% endblock %}

{% block lib %}
    {% include 'lib/highlightjs.html.twig' %}
{% endblock %}

{% block main %}
    <p>
        Lately I have been interested in <a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components">Web Components</a>.
        Web Components are native to modern browsers; there are no libraries, frameworks, or build tools required.
        Web Components can be used by any other framework, and as <a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements">custom elements</a> they can be maniputed by vanilla Javascript like any native element.
    </p>
    <p>
        Below are some of my attempts at creating components that only encapsulate <em>behavior</em>.
        They can then be 100% styled by the project that uses them.
    </p>

    <a href="/web-components/tabs" class="webComponentLink">Tabs</a>
    <a href="/web-components/modal" class="webComponentLink">Modal</a>
    <a href="/web-components/dropdown" class="webComponentLink">Dropdown</a>
{% endblock %}